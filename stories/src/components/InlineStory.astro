---
import { Input, Select } from 'fulldev-ui'
import { pascal } from 'radash'

interface Props {
  component: string
  props: {
    name: string
    options?: any[]
    value?: any
  }[]
}

const components = await Astro.glob('../../node_modules/fulldev-ui/**/*.astro')

const { component, props } = Astro.props

const Component = components.find((astroComponent) => {
  const fileName = astroComponent.default.moduleId?.split('/').pop()
  const componentName = fileName?.split('.')[0]
  return componentName === pascal(component)
})?.default

Astro.url.searchParams.forEach((value, key) => {
  const propIndex = props.findIndex((prop) => prop.name === key)
  if (propIndex === -1) return
  props[propIndex].value = value
})

const propsObject: any = {}
props.forEach(({ name, value }) => {
  propsObject[name] = value
})
---

<div class="story">
  <div class="story-preview">
    {Component && <Component {...propsObject} />}
  </div>
  <div class="story-inputs">
    {
      props.map(({ name, value, options }) =>
        options ? (
          <Select
            class="story-input"
            {value}
            {name}
            {options}
          />
        ) : (
          <Input
            class="story-input"
            {value}
            {name}
          />
        )
      )
    }
  </div>
</div>

<script is:inline>
  const inputs = document.querySelectorAll('.story-input')

  inputs.forEach((input) => {
    input.addEventListener('change', (event) => {
      const { name, value } = event.target
      const url = new URL(window.location.href)
      url.searchParams.set(name, value)
      window.location.href = url
    })
  })
</script>

<style>
  .story {
    display: flex;
    flex-direction: column;
    width: 100%;

    .story-preview {
      display: flex;
      justify-content: center;
      align-items: center;
      border: 1px solid var(--border);
      border-bottom: 0;
      padding: 1rem;
      width: 100%;
    }

    .story-inputs {
      display: flex;
      flex-direction: column;
      gap: var(--space-3);
      border: 1px solid var(--border);
      background-color: var(--background-subtle);
      padding: var(--space-3);
      width: 100%;
    }
  }

  p {
    --font-family: 'JetBrains Mono' !important;
  }
</style>
