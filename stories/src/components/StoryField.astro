---
import { getEntry } from 'astro:content'
import { dash } from 'radash'

const { component, ...rest } = Astro.props

const componentData: any = await getEntry('components', dash(component))
---

{
  Object.entries(rest.value).map(([key, value]: [string, any]) => {
    if (key === 'component') return
    if (value === undefined) return
    if (value === 'undefined') return

    if (key !== 'component' && value !== 'undefined') {
      if (
        componentData.data.props[key] &&
        componentData.data.props[key].options
      ) {
        return (
          <div>
            <label>{key}?:</label>
            <select
              class="input full variant-outline size-md color-base"
              name={key}
            >
              {componentData.data.props[key].options.map((option: string) => {
                if (option === value) return <option selected>{option}</option>
                return <option>{option}</option>
              })}
            </select>
          </div>
        )
      }

      if (value !== '') {
        return (
          <div>
            <label>{key}?:</label>
            <input
              class="input full variant-outline size-md color-base"
              name={key}
              type="text"
              value={value}
            />
          </div>
        )
      }
    }

    return (
      <input
        name={key}
        type="hidden"
        value={value}
      />
    )
  })
}

<style>
  @import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap');

  :root {
    --font-family: 'JetBrains Mono' !important;
  }

  div {
    padding-bottom: 10px;
  }

  input,
  select,
  label {
    --font-family: 'JetBrains Mono' !important;
    font-family: var(--font-family) !important;
  }
</style>
