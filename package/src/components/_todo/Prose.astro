---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../_Component.astro'

type Props<As extends HTMLTag = 'div'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Component>

const { as = 'div', ...rest } = Astro.props
---

<Component
  class:list={['prose']}
  {as}
  {...rest}
>
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  // @include component('prose') {
  //   @media (min-width: 768px) {
  //     padding-right: 15vw;
  //     padding-left: 15vw;
  //   }
  //   @media (min-width: 1024px) {
  //     padding-right: 25vw;
  //     padding-left: 25vw;
  //   }
  // }

  // Tables
  .full.prose {
    color: var(--text);
    font-weight: var(--font-weight);
    font-size: var(--text-body);
    line-height: 1.625;
    font-family: var(--font-family);

    .display {
      display: grid;
      width: 100%;
      max-width: none;

      table {
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          margin: var(--space-2) 0;
          font: 600 var(--text-body) 'Saira';

          & + p {
            color: var(--hue11);
          }
        }
      }
    }

    @media (max-width: 640px) {
      display: none;
    }

    table {
      margin: var(--space-4) 0;
      border: 1px solid var(--border);
      border-radius: var(--radius-1) !important;
      border-collapse: collapse;
      width: 100%;
    }

    th {
      border-bottom: 1px solid var(--border);
      background: var(--raised-background) !important;
      color: var(--muted-foreground) !important;
      font-weight: 500 !important;
      font-size: var(--text-label) !important;
    }

    td {
      color: var(--muted-foreground) !important;
    }

    th,
    td {
      padding: var(--space-2);
    }

    table a {
      color: var(--solid) !important;
      font-size: var(--text-label) !important;
      line-height: 1 !important;
      white-space: nowrap;
    }

    h6 {
      margin: var(--space-2) 0;
      font-size: var(--text-body) !important;
    }

    table a:hover {
      text-decoration: underline;
    }
  }
</style>
