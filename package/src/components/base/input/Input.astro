---
import type { ComponentProps, Polymorphic } from 'astro/types'
import Component from '../../_Component.astro'
import Box from '../../segment/Box.astro'
import Label from '../../typography/Label.astro'
import Icon from '../Icon.astro'
import InputElement from './InputElement.astro'

type Props<As extends 'div'> = Polymorphic<{ as: As }> & {
  label?: ComponentProps<typeof Label> | ComponentProps<typeof Label>['text']
  icon?: ComponentProps<typeof Icon> | ComponentProps<typeof Icon>['name']
} & Pick<
    ComponentProps<typeof InputElement>,
    | 'placeholder'
    | 'type'
    | 'name'
    | 'variant'
    | 'value'
    | 'disabled'
    | 'required'
  >

const {
  as = 'div',
  field,
  control,
  label,
  icon,
  name,
  variant,
  placeholder,
  type,
  value,
  disabled,
  required,
  ...rest
} = Astro.props
---

<Component
  class:list={['input']}
  {as}
  {...rest}
>
  <Label
    for={name}
    {...typeof label === 'string' ? { text: label } : label}
  />
  <Box>
    <InputElement
      {placeholder}
      {type}
      {name}
      {variant}
      {value}
      {disabled}
      {required}
    />
    <Icon {...typeof icon === 'string' ? { name: icon } : icon} />
  </Box>
</Component>

<style is:global lang="scss">
  @import '../../../css/utils.scss';

  @include component('input') {
    display: flex;
    position: relative;
    flex-direction: column;
    gap: var(--space-1);
    width: 100%;

    .icon {
      position: absolute;
      top: 50%;
      right: var(--element-2);
      transform: translateY(-50%);
    }
  }
</style>
