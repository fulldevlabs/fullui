---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../_Component.astro'

type Props<As extends HTMLTag = 'span'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Component> & {
    name?: string
  }

const { as = 'input', name, ...rest } = Astro.props
---

<Component
  as="label"
  for={name}
  class:list="switch"
  if={true}
  {...rest}
>
  <input
    name={name}
    type="checkbox"
    class="checkbox"
  />
  <div class="checkmark"></div>
</Component>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('switch') {
    display: block;
    position: relative;
    transition: var(--transition);
    cursor: pointer;
    box-sizing: border-box;
    border: 1px solid var(--border);
    border-radius: 999px;
    background-color: var(--background);
    padding: var(--space-1);
    width: fit-content;
    min-width: calc(
      (var(--text-label) + 2 * var(--element-1) * 2) + 2 * var(--space-1)
    );
    height: calc(var(--text-label) + 2 * var(--element-1));

    .checkbox {
      position: absolute;
      opacity: 0;
      width: 0;
      height: 0;
    }

    .checkmark {
      transform: 0%;
      transition: var(--transition);
      border-radius: 999px;
      background-color: var(--border);
      width: 50%;
      height: 100%;
    }

    .checkbox:checked ~ .checkmark {
      transform: translateX(100%);
      background-color: var(--solid);
    }

    &:hover {
      background-color: var(--hover);
    }

    &:focus-visible {
      outline: 2px solid var(--focus) !important;
      outline-offset: 2px;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      pointer-events: none;
    }
  }
</style>
