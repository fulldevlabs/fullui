---
import type { HTMLAttributes } from 'astro/types'
import { Image as AstroImage } from 'astro:assets'
import { isString } from 'remeda'
import Component from '../_Component.astro'

type Props = HTMLAttributes<'img'> & {
  position?: 'background' | 'cover'
  frame?: 'inset'
  width?: number | 1920
  height?: number | 1920
}

function getAltBySrc(): string {
  if (!isString(Astro.props.src)) return ''
  const filename = Astro.props.src?.split('/').pop()
  const slug = filename && filename.split('.')[0]
  const unslugged = slug?.replace(/-/g, ' ')
  return unslugged || ''
}

const {
  loading = 'lazy',
  alt = getAltBySrc(),
  src = Astro.props.src,
  position,
  frame,
  width,
  height,
  ...rest
} = Astro.props
---

{
  src && (
    <>
      {!width && !height && (
        <Component
          class:list={['image']}
          if={src}
          {src}
          {alt}
          as="img"
          {frame}
          {position}
          {...rest}
        />
      )}
      {width && height && (
        <AstroImage
          class:list={['image']}
          {src}
          {alt}
          width={width}
          height={height}
          loading="eager"
          {...rest}
        />
      )}
    </>
  )
}

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('image') {
    display: block;
    width: 100%;
    height: auto;
    object-fit: cover;

    &.mask-sm {
      -webkit-mask-image: linear-gradient(to top, transparent 0%, black 30%);
      mask-image: linear-gradient(to top, transparent 0%, black 30%);
    }

    &.mask {
      -webkit-mask-image: linear-gradient(to top, transparent 0%, black 100%);
      mask-image: linear-gradient(to top, transparent 0%, black 100%);
    }
  }
</style>