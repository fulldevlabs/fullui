---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../_Component.astro'
import ListItem from './ListItem.astro'

type Props<As extends HTMLTag = 'ul'> = Polymorphic<{ as: As }> & {
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'
  color?: 'base' | 'brand'
  contrast?: boolean
  items?: (
    | ComponentProps<typeof ListItem>
    | ComponentProps<typeof ListItem>['html']
  )[]
}

const { as = 'ul', items, ...rest } = Astro.props
---

<Component
  class:list={['list']}
  {as}
  {...rest}
>
  {
    items?.map((item) => {
      if (typeof item === 'string') return <ListItem html={item} />
      else return <ListItem {...item} />
    })
  }
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('list') {
    display: flex;
    flex-direction: column;
    padding-left: var(--space-4);
    color: var(--foreground);
    font-weight: var(--font-weight);
    font-size: var(--text-body);
    line-height: 1.625;
    font-family: var(--font-family);
    list-style-type: disc;
  }
</style>
