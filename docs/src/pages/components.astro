---
import { getEntry } from 'astro:content'
import { Deck, Heading, Layout, Main, Paragraph, Section } from 'fulldev-ui'

import { getCollection } from 'astro:content'
import ComponentCard from '../components/ComponentCard.astro'
import Cta from '../components/Cta.astro'
import Footer from '../components/Footer.astro'
import Header from '../components/Header.astro'

const { data, render } = await getEntry('pages', 'components')
const { Content } = await render()

const baseComponents = await getCollection('docs', (entry) =>
  entry.slug.startsWith('base/')
)

const typographyComponents = await getCollection('docs', (entry) =>
  entry.slug.startsWith('typography/')
)

const components = await Astro.glob(
  '../../node_modules/fulldev-ui/src/components/**/*.astro'
)
---

<Layout
  title="Fulldev UI - Astro UI component library, open-source"
  description="A library of UI components, written in Astro, compatible with all frameworks. Unique features to build entire websites, check it out."
  image="https://ui.full.dev/og-image-fulldev-ui.png"
  body={{
    class: 'not-content',
    theme: 'dark',
  }}
>
  <Header />
  <Main>
    <Section
      class="hero-section"
      size="lg"
    >
      <Heading
        size="xl"
        as="h1"
        text={data.hero.heading}
      />
      <Paragraph text={data.hero.paragraph} />
    </Section>

    <Section>
      <Heading>Base components</Heading>
      <Deck>
        {
          baseComponents.map(({ data, slug }) => {
            const component = components.find((component) =>
              component.file.endsWith(data.title + '.astro')
            )
            const Component = component?.default

            const deepProps = Array.isArray(data.props)
              ? data.props.reduce((acc, item) => {
                  if (item.value) {
                    return {
                      ...acc,
                      [item.prop]: item.value,
                    }
                  }
                  return acc
                }, {})
              : {}

            if (Component && Object.keys(deepProps).length > 0) {
              return (
                <ComponentCard
                  title={data.title}
                  description={data.description}
                  link={slug}
                >
                  <Component {...deepProps} />
                </ComponentCard>
              )
            }

            return null
          })
        }
      </Deck>
    </Section>
  </Main>

  <Section>
    <Heading>Typography components</Heading>
    <Deck>
      {
        typographyComponents.map(({ data, slug }) => {
          const component = components.find((component) =>
            component.file.endsWith(data.title + '.astro')
          )
          const Component = component?.default

          const deepProps = Array.isArray(data.props)
            ? data.props.reduce((acc, item) => {
                if (item.value) {
                  return {
                    ...acc,
                    [item.prop]: item.value,
                  }
                }
                return acc
              }, {})
            : {}

          if (Component && Object.keys(deepProps).length > 0) {
            return (
              <ComponentCard
                title={data.title}
                description={data.description}
                link={slug}
              >
                <Component {...deepProps} />
              </ComponentCard>
            )
          }

          return null
        })
      }
    </Deck>
  </Section>
  <Cta buttons={data.cta.buttons} />
  <Footer />
</Layout>

<style>
  .hero-section {
    background-image: url('/landing-background.png') !important;
    background-position: center !important;
    background-size: cover !important;
    background-repeat: no-repeat !important;
  }
</style>
